from flask import Blueprint, request, jsonify, session
from services.interview_service import handle_create_session, handle_save_qa, handle_save_evaluation
from DAO.cau_hoi_tra_loi_dao import add_question_answer
interview_bp = Blueprint('interview', __name__)

@interview_bp.route('/phongvan', methods=['POST'])
def create_session():
    # M·∫∑c ƒë·ªãnh s·ª≠ d·ª•ng user_id = 1
    user_id = 1
    phien_id = handle_create_session(user_id)
    # üëâ L∆∞u phien_id v√†o session ƒë·ªÉ s·ª≠ d·ª•ng sau
    session["phien_id"] = phien_id
    return jsonify({'ma_phien': phien_id}), 201

@interview_bp.route('/luu_cau_tra_loi', methods=['POST'])
def luu_cau_tra_loi():
    data = request.json
    phien_id = data.get('phien_id')
    cau_hoi = data.get('cau_hoi')
    cau_tra_loi = data.get('cau_tra_loi')
    print("Gi√° tr·ªã cau_hoi nh·∫≠n ƒë∆∞·ª£c:", repr(cau_hoi))
    if not phien_id or not cau_hoi or not cau_tra_loi:
        return jsonify({"error": "Thi·∫øu d·ªØ li·ªáu"}), 400
    print("DEBUG cau_hoi:", repr(cau_hoi), "strip:", repr(cau_hoi.strip().lower()))
    # G·ªçi service l∆∞u c√¢u h·ªèi - tr·∫£ l·ªùi
    add_question_answer(phien_id, cau_hoi, None)      # L∆∞u c√¢u h·ªèi c·ªßa AI
    add_question_answer(phien_id, None, cau_tra_loi)  # L∆∞u tr·∫£ l·ªùi c·ªßa ng∆∞·ªùi d√πng
    return jsonify({"message": "ƒê√£ l∆∞u th√†nh c√¥ng"}), 200

@interview_bp.route('/danhgia', methods=['POST'])
def save_evaluation():
    data = request.json
    phien_id = data.get('phien_id')
    danhgia = data.get('danhgia')
    diemso = data.get('diemso')
    if not phien_id or danhgia is None or diemso is None:
        return jsonify({"error": "Thi·∫øu d·ªØ li·ªáu ƒë√°nh gi√°"}), 400

    # G·ªçi service l∆∞u ƒë√°nh gi√°
    handle_save_evaluation(phien_id, danhgia, diemso)

    return jsonify({"message": "ƒê√£ l∆∞u ƒë√°nh gi√°"})